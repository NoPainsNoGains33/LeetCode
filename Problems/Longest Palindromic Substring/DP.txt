class Solution {
public:
    string longestPalindrome(string s) {
        int len = s.length();
        if (len == 0)
            return "";
        if (len == 1)
            return s;
        bool p[len][len];
        int start = 0, max_length = 1;
        for (int i = 0; i < len - 1; i++){
            p[i][i] = true;
            p[i][i+1] = (s[i] == s[i+1]);
        }
        p[len-1][len-1] = true;
        for (int i = len - 1; i >= 0; i--){
            for (int j = i+1; j < len; j++){                
                if (j-1 >= i+1)
                    p[i][j] = p[i+1][j-1] && (s[i] == s[j]);
                if (j - i + 1 > max_length && p[i][j]){
                    start = i;
                    max_length = j - i + 1;
                }
            }
        }
        return s.substr(start, max_length);
    }
};